<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <meta httpEquiv="x-ua-compatible" content="ie=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <link rel="stylesheet" href="/stylesheets/style.css" />
  </head>
  <body>
    <section>
      <h1>구매하기</h1>
      <h3><%= orderName %></h3>
      <span><%= price.toLocaleString() %>원</span>
      <div id="payment-widget"></div>
      <button id="payment-button">결제하기</button>
    </section>
    <script src="https://js.tosspayments.com/v1/payment-widget"></script>
    <script>
      const paymentWidget = PaymentWidget(
        "test_ck_D5GePWvyJnrK0W0k6q8gLzN97Eoq",
        PaymentWidget.ANONYMOUS
      );

      const paymentMethods = paymentWidget.renderPaymentMethods(
        "#payment-widget",
        "<%= price %>"
      );

      // 커스텀 결제수단을 선택한 채로 결제 버튼을 눌렀을 때(requestPayment를 호출했을 때) 콜백을 실행합니다.
      // 토스페이먼츠 상점관리자에서 등록한 key값이 paymentMethodKey로 들어옵니다.
      paymentMethods.on("customRequest", function (paymentMethodKey) {
        if (paymentMethodKey === "VOUCHER") {
          // 바우처 결제를 직접 처리
        }
      });

      // 커스텀 결제수단을 선택했을 때 콜백을 실행합니다.
      paymentMethods.on(
        "customPaymentMethodSelect",
        function (paymentMethodKey) {
          if (paymentMethodKey === "VOUCHER") {
            // 예시: 바우처를 선택했을 때 바우처 입력 폼을 노출
          }
        }
      );

      // 커스텀 결제수단을 선택 해제했을 때 콜백을 실행합니다.
      paymentMethods.on(
        "customPaymentMethodUnselect",
        function (paymentMethodKey) {
          if (paymentMethodKey === "VOUCHER") {
            // 예시: 바우처 선택을 해제했을 때 바우처 입력 폼을 숨김
          }
        }
      );

      const button = document.getElementById("payment-button");

      button.addEventListener("click", function () {
        paymentWidget.requestPayment({
          amount: "<%= price %>",
          orderId: "<%= orderId %>",
          orderName: "<%= orderName %>",
          customerName: "<%= customerName %>",
          successUrl: window.location.origin + "/success",
          failUrl: window.location.origin + "/fail",
        });
      });
    </script>
  </body>
</html>
